---
title: "Survival analysis of Left-Truncated and Right-Censored Data"
author: "Valentina Quintero Santofimio"
format: html
editor: visual
---

# 1. Introduction

## Welcome to Survival analysis of Left-Truncated and Right-Censored data ReCoDe Project

This project is designed to guide you through the process of performing survival analysis using large cohort data. Survival analysis, also known as time-to-event analysis, is a statistical method used to quantify the risk and timing of events, such as death, disease onset, or other significant occurrences. This type of analysis is particularly powerful in medical and epidemiological research, where understanding the duration until an event occurs can provide critical insights into patient outcomes and treatment efficacy.

It is structured into a series of sections, which will introduce you to the fundamental concepts, techniques, and applications of survival analysis. The aim is for you to learn how to manage and analyse large data sets, apply appropriate statistical models, interpret results, and draw meaningful conclusions about survival probabilities and hazard functions.

### Project Layout

```{mermaid}
flowchart LR
  A(Data Curation) --> B(Cox Proportional Regression Model)
  B --> C(Univariable Analysis)
  B --> D(Multivariable Analysis)
  C --> E[Kaplan -Meier Curve]
  C --> F[Log-Rank Test]
  D --> G[Hazard Ratio Table]
  D --> H[Forest Plot]
  
  F --> I{Interpretation of results}
  E --> I
  G --> I
  H --> I
```

# 2. Data Curation

```{r}
# Load Data set 
#Relative to where qmd is .. 

death <- read.table("data/synthetic_data_ReCoDe.txt", header=TRUE, sep="\t")

#Months need to be in number and not character
death$monthofbirth <- as.character(death$monthofbirth)
death$monthofbirth[death$monthofbirth == "January"] <- "01"
death$monthofbirth[death$monthofbirth == "February"] <- "02"
death$monthofbirth[death$monthofbirth == "March"] <- "03"
death$monthofbirth[death$monthofbirth == "April"] <- "04"
death$monthofbirth[death$monthofbirth == "May"] <- "05"
death$monthofbirth[death$monthofbirth == "June"] <- "06"
death$monthofbirth[death$monthofbirth == "July"] <- "07"
death$monthofbirth[death$monthofbirth == "August"] <- "08"
death$monthofbirth[death$monthofbirth == "September"] <- "09"
death$monthofbirth[death$monthofbirth == "October"] <- "10"
death$monthofbirth[death$monthofbirth == "November"] <- "11"
death$monthofbirth[death$monthofbirth == "December"] <- "12"

#Format of year XXXX- MonthXX- day XX 
death$dateofbirth <- paste0(death$yearofbirth,"-", death$monthofbirth, "-01")
death$dateofbirth <- as.Date(death$dateofbirth)
death$dateofdeath <- as.Date(death$dateofdeath)
death$now_cens <- as.Date("2023-01-01") #Change to "end of study" censoring date

death$timetoevent <- death$dateofdeath - death$dateofbirth 
death$timetocens <- death$now_cens - death$dateofbirth 

#Select final time if not dead then censoring date
death$time <- ifelse(is.na(death$dateofdeath), death$timetocens, death$timetoevent)

death$time_years <- death$time/365.25 #To have time in years

##Censoring of participants- do we know when they died? if so = 1 (Event occurs)
##Otherwise = 0 as we do not know when this could happen. 

death$allcause_death <- as.character(death$allcause_death)
death$allcause_death[is.na(death$allcause_death)] <- 0 #No event occured (ALIVE)
death$allcause_death[death$allcause_death > 0] <- 1 #Event occurs (Death)


```

# 3. Survival Analysis 

The Surv() function from the {survival} package creates a survival object for use as the response in a model formula. This object is then use to calculate the survial time of our desired model. 

It is 

## Univariable (unadjusted) model 

```{r}
#Survival analysis people with [disease] vs [no disease] 
library(survival)
library(survminer)
library(ggplot2)
library(gtsummary)

#Build survival object for all cause mortality (this can be altered to different types of death- See 5. Extension)
LTRC_ats <- Surv(time =death$Age, time2 = death$time_years, event = death$allcause_death)

#Unadjusted for covariates
fit1 <- survfit(LTRC_ats ~ AO.fev1fvc, data = death)

summary(fit1)
```

## Multivariable (adjusted) model
```{r}

```

# 4. Visualisation of results 
Survival analysis results may be presented in different ways depending on the type of analysis. For instance, univariable (unadjusted) models may be presented in a Kaplan-Meier Curve, whereas multivariable (adjusted) models are presented in a table or a forest plot.

## Kaplan-Meier Curve and Log-Rank test
The Kaplan-Meier method is a widely used technique for estimating survival times and probabilities. The results are represented as a step function, with each step corresponding to an event occurrence. 

To compare survival curves between different groups, the Log-rank test is commonly used This statistical test evaluates whether there are significant differences in survival distributions by comparing observed and expected event rates across groups.

````{r}

ggsurvplot(fit1,
           pval = TRUE, conf.int = TRUE,
           risk.table = TRUE,
           risk.table.col = "strata", 
           linetype = "strata", 
           legend.title = "Status",
           xlab="Time (Years)",
           surv.median.line = "hv", 
           ggtheme = theme_bw(), 
           palette = c("#E7B800", "#2E9FDF"))

```
```{r}
```
# 5. Extension task

## Survival analysis stratified by cause of death
#### Arrange mortality data by types of death and all cause mortality ICD codes  
```{r}
#Using same data set as above 

#Classify type of death according to International Classificaiton of Disease Code (ICD-10)
library(plyr)

#ICD10 codes from I05-I89
cardiovascular <- death %>%
  filter(str_detect(cofdm, "I"))

tojoincardio <- data.frame(cardiovascular$eid, cardiovascular$cofdm)
death <- join(death, tojoincardio, type="left", by="eid")

death$cardio_death <- ifelse(is.na(death$cardiovascular.cofdm), 0,1)

#ICD10 codes from J00-J99
respiratory <- death %>%
  filter(str_detect(cofdm, "J"))

tojoinrespi <- data.frame(respiratory$eid, respiratory$cofdm)
death <- join(death, tojoinrespi, type="left", by="eid")

death$respi_death <- ifelse(is.na(death$respiratory.cofdm), 0,1)


#ICD10 codes from C00-C97 and D10-D48
cancer <- death %>%
  filter(str_detect(cofdm, "C|D10|D11|D12|D13|D14|D15|D16|D17|D18|D19|D20|D21|D22
                    |D23|D24|D25|D26|D27|D28|D29|D30|D31|D32|D33|D34
                    |D35|D36|D37|D38|D39|D40|D41|D42|D43|D44|D45|D46|D47|D48"))

tojoincancer <- data.frame(cancer$eid, cancer$cofdm)
death <- join(death, tojoincancer, type="left", by="eid")

death$cancer_death <- ifelse(is.na(death$cancer.cofdm), 0,1)

```

## Data curation 
```{r}
#Same as above but now with the different types of death 

#Cardiovascular mortality 
death$cardio_death <- as.character(death$cardio_death)
death$cardio_death[is.na(death$cardio_death)] <- 0 #No event occured (ALIVE)
death$cardio_death[death$cardio_death > 0] <- 1

#Respiratory mortality
death$respi_death <- as.character(death$respi_death)
death$respi_death[is.na(death$respi_death)] <- 0 #No event occured (ALIVE)
death$respi_death[death$respi_death > 0] <- 1

#Neoplasm mortality
death$cancer_death <- as.character(death$cancer_death)
death$cancer_death[is.na(death$cancer_death)] <- 0 #No event occured (ALIVE)
death$cancer_death[death$cancer_death > 0] <- 1

```

## Survival analysis (Multivariable) for all types of death 
```{r}
library(gtsummary)

LTRC_ats <- Surv(time =death$Age, time2 = death$time_years, event = death$allcause_death)

coxph <- coxph(LTRC_ats ~ AO.fev1fvc + Sex + Ethnicity + bmi + Smoking_status +Smoking_pack_yrs + Townsend_deprivation_index + 
                                UKB_centre, data = death)
summary(coxph)

coxph %>% tbl_regression(exponentiate= TRUE) %>% bold_p(t = 0.05) 


t1 <- coxph %>% tbl_regression(exponentiate= TRUE) %>% bold_p(t = 0.05) 

#Respiratory mortality
LTRC_ats<- Surv(time =death$Age, time2 = death$time_years, event = death$respi_death)

coxph <- coxph(LTRC_ats ~ AO.fev1fvc + Sex + Ethnicity + bmi + Smoking_status +Smoking_pack_yrs + Townsend_deprivation_index + 
                                UKB_centre, data = death)
summary(coxph)

t2 <- coxph %>% tbl_regression(exponentiate= TRUE) %>% bold_p(t = 0.05) 

#Cardiovascular mortality
LTRC_ats <- Surv(time =death$Age, time2 = death$time_years, event = death$cardio_death)

coxph <- coxph(LTRC_ats ~ AO.fev1fvc + Sex + Ethnicity + bmi + Smoking_status +Smoking_pack_yrs + Townsend_deprivation_index + 
                                UKB_centre, data = death)
summary(coxph)

t3 <- coxph %>% tbl_regression(exponentiate= TRUE) %>% bold_p(t = 0.05) 


#Cancer mortality
LTRC_ats<- Surv(time =death$Age, time2 = death$time_years, event = death$cancer_death)

coxph <- coxph(LTRC_ats ~ AO.fev1fvc + Sex + Ethnicity + bmi + Smoking_status +Smoking_pack_yrs + Townsend_deprivation_index + 
                                UKB_centre, data = death)
summary(coxph)

t4 <- coxph %>% tbl_regression(exponentiate= TRUE) %>% bold_p(t = 0.05) 


tbl_merge_ex2 <-
  tbl_merge(
    tbls = list(t1, t2, t3, t4),
    tab_spanner = c("**All-cause mortality**", "**Respiratory mortality**",
                    "**Cardiovascular mortality**", "**Cancer mortality**")
  )

tbl_merge_ex2 %>%
  as_flex_table() %>%
  flextable::save_as_docx(path = "NAMEs.docx")
```
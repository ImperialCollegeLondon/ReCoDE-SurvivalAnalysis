# Conducting a Survival Analysis

Using the previous data set we curated, we can now conduct the survival analysis. The `Surv()` function from the `{survival}` package creates a survival object for use as the response in a model formula. This object is then used to calculate the survival time of our desired model.

## Univariate (unadjusted) model

Firstly, we must build a survival object for all cause mortality, (this can be altered to different types of death see [Advanced Survival Analysis](extension.qmd)).

```{r message=FALSE}
#| warning: false

#Survival analysis people with [disease] vs [no disease] 
library(survival)
library(survminer)
library(ggplot2)
library(gtsummary)
library(knitr)
library(dplyr)

load("data/result.RData")
death$allcause_death <- as.numeric(death$allcause_death)

Surv(death$time_years, death$allcause_death)[1:10]
```

From this we can see that only the first person experienced the event at 67.56 years, the rest, as indicated by the "+" have not experienced the event and therefore are said to be censored.

## Note: Possible Error

It is common that our code returns an error: "Invalid status value, must be logical or numeric", if we have not specified the type of variable we want to store our all-cause mortality variable (status). This can be easily corrected with the code below.

```{r message=FALSE}
#Surv(death$time_years, death$allcause_death): Invalid status value, must be logical or numeric. If this error appears, simply convert to numeric

#death$allcause_death <- as.numeric(death$allcause_death)
```

## Creating survival curves

Let's now use the `survfit()` function to create the survival curves for the entire cohort using the Kaplan-Meier method. In this example we defined the outcome as 0/1 for airflow obstruction.

```{r message=FALSE}
#| warning: false

LTRC_ats <- Surv(time =death$Age, time2 = death$time_years, event = death$allcause_death)

#Unadjusted for covariates
fit1 <- survfit(LTRC_ats ~ AO.fev1fvc, data = death)
summary_fit1 <- summary(fit1)

time <- summary_fit1$time
n_risk <- summary_fit1$n.risk
surv <- summary_fit1$surv
lower_ci <- summary_fit1$lower
upper_ci <- summary_fit1$upper

# Display the first few rows of these components
result <- data.frame(
  Time = time[1:10],
  N_Risk = n_risk[1:10],
  Survival = surv[1:10],
  Lower_CI = lower_ci[1:10],
  Upper_CI = upper_ci[1:10]
)

print(result)
```

# Visualisation of results

Survival analysis results may be presented in different ways depending on the type of analysis. For instance, univariate (unadjusted) models may be presented in a Kaplan-Meier Curve.

## Kaplan-Meier Curve and Log-Rank test

The Kaplan-Meier method is a widely used technique for estimating survival times and probabilities. The results are represented as a step function, with each step corresponding to an event occurrence.

To compare survival curves between different groups, the Log-rank test is commonly used. This statistical test evaluates whether there are significant differences in survival distributions by comparing observed and expected event rates across groups.

```{r message=FALSE}
#Plotting the results 

km_plot <- ggsurvplot(
  fit1, 
  data = death, 
  conf.int = TRUE,
  risk.table = TRUE,
  ggtheme = theme_minimal(),
  title = "Kaplan-Meier Survival Curve",
  xlab = "Time in Years",
  ylab = "Survival Probability",
  legend.labs = c("No Airflow Obstruction", "Airflow Obstruction"),#Change stata
  xlim = c(40, max(fit1$time)),  # Set x-axis limits (start at 40 min age)
  risk.table.fontsize = 3,  # Adjust the font size for the risk table numbers
  tables.theme = theme_survminer(
    font.main = 8, 
    font.submain = 8, 
    font.caption = 8, 
    font.x = 8, 
    font.y = 8, 
    font.tickslab = 8
  )
)

print(km_plot)
```

## Overview of the survival model 
We can present an overview of the survival model in a table.
```{r message=FALSE}
summary_fit1 <- summary(fit1)
# Extract key summary statistics
summary_table <- data.frame(
  Time = summary_fit1$time,
  N.risk = summary_fit1$n.risk,
  N.event = summary_fit1$n.event,
  Survival = summary_fit1$surv,
  Standard.Error = summary_fit1$std.err,
  Lower.CI = summary_fit1$lower,
  Upper.CI = summary_fit1$upper, 
  )

# Display the summary table
kable(summary_table[1:15, ], caption = "Summary of Survival Fit for Airflow obstruction (AO.fev1fvc)")
```

## Calculating Median Survival time 
The median survival time is often reported in a survival analysis for each of the groups we are comparing. 

```{r message=FALSE}
median_survival <- fit1

median_survival
```
We can see that the median survival time for people without airflow obstruction is 86.5 years compared to 85.7 years in people with airflow obstruction. Meaning that people with AO live less than those without. 

## Log Rank Test

```{r message=FALSE}
#| warning: false
# Create the survival object for right-censored data
right_censored_surv <- Surv(time = death$time_years, event = death$allcause_death)

# Fit the survival model
fit2 <- survfit(right_censored_surv ~ AO.fev1fvc, data = death)

# Perform log-rank test
log_rank_test <- survdiff(right_censored_surv ~ AO.fev1fvc, data = death)

#Log-rank test results 

print(log_rank_test)
```

A significant Log-Rank test results means that there are statistically significant differences between the two groups we are comparing (e.g. People with AO vs people without AO)

# Multivariate (adjusted) model

Multivariate (adjusted) models are used to account for confounders that may impact the associations between the exposure and the outcome. It is common to have complex models adjusting for multiple covariates, and therefore presenting these on a KM curve would be confusinve and not informative. Therefore, results from a multivatiate model are better presented in a table or a forest plot.

```{r message=FALSE}
#| warning: false
#Survival analysis people with SAO vs no SAO 
library(survival)
library(survminer)
library(ggplot2)
library(gtsummary)

#Order smoking status correctly
death$Smoking_status <- as.factor(death$Smoking_status)
death$Smoking_status <- relevel(death$Smoking_status, ref = "Never")

#All cause mortality adjusted for covariates
LTRC_ats <- Surv(time =death$Age, time2 = death$time_years, event = death$allcause_death)

coxph_LTRC_airflow <- coxph(LTRC_ats ~ AO.fev1fvc + Sex + bmi + Ethnicity + Smoking_status + UKB_centre, data = death)


summary(coxph_LTRC_airflow)

```

## Export results in a table

From the summary results, we can export the results in a table, where `exp(coef)` corresponds to the Hazard Ratio (HR), we also report the 95% Confidence Intervals and the P-Value for our outcome and each covariate.

```{r message=FALSE}
coxph_LTRC_airflow %>%
  tbl_regression(exponentiate = TRUE) %>%
  bold_p(t = 0.05) %>%
  modify_table_styling(
    columns = "label",
    rows = variable == "AO.fev1fvc",
    label = "Airflow obstruction"
  )

#Save table as docx
#flex_tbl <- as_flex_table(tb1)
# Save as Word document
#read_docx() %>%
#  body_add_flextable(value = flex_tbl) %>%
#  print(target = "allcause_mortality.docx")
```

## Present results in a forest plot

The results from the Cox Proportional Hazard model may also be presented in a graphical manner using a forest plot.

### Forest plot with all variables that were included in the model

```{r, echo = FALSE, fig.height = 28, fig.width = 20, out.width="100%", out.height="100%"}
ggforest(coxph_LTRC_airflow, data = death, fontsize = 1, main = "Forest Plot for Cox Proportional Hazards Model")

```

### Forest plot selecting variables we want to present

```{r message=FALSE}
# Extract the coefficients and confidence intervals
coefs <- summary(coxph_LTRC_airflow)$coefficients
confint <- summary(coxph_LTRC_airflow)$conf.int

# Exclude UKB_centre variables
exclude_indices <- grepl("UKB_centre", rownames(coefs))
coefs <- coefs[!exclude_indices, ]
confint <- confint[!exclude_indices, ]

# Create a dataframe for plotting
forest_data <- data.frame(
    Variable = rownames(coefs),
    HR = coefs[, "exp(coef)"],
    LowerCI = confint[, "lower .95"],
    UpperCI = confint[, "upper .95"]
)

# Rename the specific variable
# Optionally, clean up other variable names for better readability
forest_data$Variable <- ifelse(forest_data$Variable == "AO.fev1fvc", "Airflow obstruction", forest_data$Variable)

forest_data$Variable <- ifelse(forest_data$Variable == "bmi", "BMI", forest_data$Variable)

forest_data$Variable <- ifelse(forest_data$Variable == "EthnicityWhite", "European (White) Ancestry", forest_data$Variable)

forest_data$Variable <- ifelse(forest_data$Variable == "SexMale", "Males", forest_data$Variable)

forest_data$Variable <- ifelse(forest_data$Variable == "Smoking_statusCurrent", "Current Smokers", forest_data$Variable)

forest_data$Variable <- ifelse(forest_data$Variable == "Smoking_statusPrevious", "Previous Smokers", forest_data$Variable)

# Specify the desired order of variables
desired_order <- c("Airflow obstruction", "BMI", "European (White) Ancestry", "Males", "Current Smokers", "Previous Smokers")

# Set the levels of the Variable column according to the desired order
forest_data$Variable <- factor(forest_data$Variable, levels = rev(desired_order))

# Create the forest plot
forest_plot <- ggplot(forest_data, aes(x = HR, y = Variable)) +
    geom_point() +
    geom_errorbarh(aes(xmin = LowerCI, xmax = UpperCI), height = 0.2) +
    geom_vline(xintercept = 1, linetype = "dashed") +
    labs(title = "Forest Plot for Cox Proportional Hazards Model",
         x = "Hazard Ratio",
         y = "Variables") +
    theme_minimal()

# Display the plot
print(forest_plot)

```

# Interpretation of results

![Think, think, think](help/page3.png)

From these results, we can conclude that:

-   Participants with airflow obstruction have significantly increased all cause mortality risk compared to participants without airflow obstruction (HR = 1.66, 95% CI = 1.58, 1.74)

-   The risk is 1.45 times higher in males compared to females

-   The risk is 2.37 times higher among current smokers and 1.19 times among previous smokers compared to never smokers

-   Model is adjusted for age (as used as the time scale), sex, smoking status, BMI, Ethnicity and UK Biobank Centre

Similar conclusions can be drawn from the other predictor variable used, but the idea is to report the change in risk between the two groups we are comparing.
